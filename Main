import com.dhchoi.CountdownTimer;
import com.dhchoi.CountdownTimerService;
int prevX = -mouseX;
int prevY =mouseY;

CountdownTimer timer;
String timerCallbackInfo = "";

void setup() {
  size(300, 300);
  background(250,250,250);
  // create and start a timer that has been configured to trigger onTickEvents every 100 ms and run for 5000 ms
  timer = CountdownTimerService.getNewCountdownTimer(this).configure(100, 30000).start();
}

void draw() {
  background(250);
  fill(0);
  textAlign(LEFT, TOP);
  
  // show the info of event callbacks
  textAlign(CENTER, CENTER);
  text(timerCallbackInfo, width/2, height/10);
 
color white= color(0,0,0);
color blue= color(0,0,250);

fill(blue);
ellipse(mouseX,mouseY,10,10);

fill(white);
ellipse(mouseX,mouseY,5,5);
System.out.println(mouseX * -1 + "," + mouseY * -1);
for(int i =0; i < counter;i++){
  fill(white);
ellipse(balls[counter].getX(),balls[counter].getY,5,5);
System.out.println(mouseX * -1 + "," + mouseY * -1);
}
//ball[] balls =new ball[30]; 
//balls[balls[count] = new ball x,y
}

void onTickEvent(CountdownTimer t, long timeLeftUntilFinish) {
  timerCallbackInfo = "Time Left: " + timeLeftUntilFinish/1000 + "s";

}

void onFinishEvent(CountdownTimer t) {
  timerCallbackInfo = "[finished]";
}

void keyPressed() {
  // user interface for operating the timer
  switch(key) {
    case 'a':
      println("Starting timer...");
      timer.start();
      break;
    case 's':
      println("Stopping timer...");
      timer.stop(CountdownTimer.StopBehavior.STOP_AFTER_INTERVAL);
      break;
    case 'r':
      println("Resetting timer...");
      timer.reset(CountdownTimer.StopBehavior.STOP_AFTER_INTERVAL);
      break;
    case 'q':
      println("getTimeLeftUntilNextEvent: " + timer.getTimeLeftUntilNextEvent());
      break;
    case 'w':
      println("getTimeLeftUntilFinish: " + timer.getTimeLeftUntilFinish());
      break;
  }
}
//public class ball
{
  int x;
  int y;
  public ball(int X, int Y){
  x=X;
  y=Y;
  
 
  }
  public int getX ()
  {
  return x;
 
}
    public int getY ()
  {
  return y;
}
}
